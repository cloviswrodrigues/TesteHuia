// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20201001014915_NewColunaPedido")]
    partial class NewColunaPedido
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.Cadastro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf");

                    b.Property<DateTime>("dtnascimento");

                    b.Property<string>("nome");

                    b.HasKey("id");

                    b.ToTable("Cadastros");
                });

            modelBuilder.Entity("DAL.Models.Lote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dtfabricacao");

                    b.Property<int>("produtoid");

                    b.Property<int>("quantidade");

                    b.HasKey("id");

                    b.HasIndex("produtoid");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("DAL.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("clienteid");

                    b.Property<DateTime>("dtcompra");

                    b.Property<double>("valortotal");

                    b.Property<int?>("vendedorid");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.HasIndex("vendedorid");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("DAL.Models.PedidoItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("pedidoid");

                    b.Property<int>("produtoid");

                    b.Property<int>("quantidade");

                    b.HasKey("id");

                    b.HasIndex("pedidoid");

                    b.HasIndex("produtoid");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("DAL.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cor");

                    b.Property<string>("descricao");

                    b.Property<string>("nome");

                    b.Property<double>("valor");

                    b.HasKey("id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DAL.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cadastroid");

                    b.Property<string>("login");

                    b.Property<string>("senha");

                    b.HasKey("id");

                    b.HasIndex("cadastroid");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DAL.Models.Lote", b =>
                {
                    b.HasOne("DAL.Models.Produto", "produto")
                        .WithMany("lote")
                        .HasForeignKey("produtoid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Pedido", b =>
                {
                    b.HasOne("DAL.Models.Cadastro", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");

                    b.HasOne("DAL.Models.Cadastro", "vendedor")
                        .WithMany()
                        .HasForeignKey("vendedorid");
                });

            modelBuilder.Entity("DAL.Models.PedidoItem", b =>
                {
                    b.HasOne("DAL.Models.Pedido", "pedido")
                        .WithMany("pedidoItem")
                        .HasForeignKey("pedidoid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Produto", "produto")
                        .WithMany()
                        .HasForeignKey("produtoid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Usuario", b =>
                {
                    b.HasOne("DAL.Models.Cadastro", "cadastro")
                        .WithMany()
                        .HasForeignKey("cadastroid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
